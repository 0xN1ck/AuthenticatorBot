from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.types import Message

from tgbot.keyboards.reply import generate_market_menu_user
from infrastructure.database.repo.requests import RequestsRepo

import re
import pyotp
import time

user_router = Router()


@user_router.message(CommandStart())
async def user_start(message: Message, repo: RequestsRepo):
    menu = await generate_market_menu_user(await repo.markets.get_all_markets())
    await message.reply("–ü—Ä–∏–≤–µ—Ç, –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!", reply_markup=menu)


@user_router.message(lambda message: re.match(r"üìà\u200B", message.text))
async def handle_market_button(message: Message, repo: RequestsRepo):
    market_name = message.text.split("\u200B")[1].strip()
    market_key = await repo.markets.get_market_by_name(market_name)

    if market_key:
        totp = pyotp.TOTP(market_key.market_key)
        generated_otp = totp.now()

        time_remaining = totp.interval - (int(time.time()) % totp.interval)

        await message.reply(f"<i>–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–ª—é—á:</i> <b>{market_name}</b>\n"
                            f"<i>–û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</i> <code>{generated_otp}</code>\n"
                            f"<i>–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏:</i> <b>{time_remaining}</b> —Å–µ–∫—É–Ω–¥")
    else:
        await message.reply(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è —Ä—ã–Ω–∫–∞: {market_name}\n"
                            f"<b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /start</b>")

